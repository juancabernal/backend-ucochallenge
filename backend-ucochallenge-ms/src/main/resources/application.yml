spring:
  application:
    name: UcoChallenge

  datasource:
    # Si Key Vault no entrega db-url, usarÃ¡ esta por defecto.
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:ucochallenge}}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER:org.postgresql.Driver}
    hikari:
      pool-name: ${SPRING_DATASOURCE_POOL_NAME:UcoHikariPool}
      maximum-pool-size: ${SPRING_DATASOURCE_MAX_POOL_SIZE:10}
      minimum-idle: ${SPRING_DATASOURCE_MIN_IDLE:1}
      connection-timeout: ${SPRING_DATASOURCE_CONNECTION_TIMEOUT:30000}

server:
  port: 8081

services:
  message:
    base-url: http://localhost:8082/api/v1/messages
  parameters:
    base-url: http://localhost:8083/api/v1/parameters

# ðŸ”¹ Azure Key Vault Config
azure:
  keyvault:
    url: https://uco-vault-secrets.vault.azure.net/

# ðŸ”¹ Fallbacks locales (solo si Key Vault falla)
secrets:
  db-username: ${DB_USERNAME:postgres}
  db-password: ${DB_PASSWORD:postgres}

uco-challenge:
  ai:
    openai:
      enabled: ${AI_OPENAI_ENABLED:false}
      endpoint: ${AI_OPENAI_ENDPOINT:https://api.openai.com/v1/responses}
      api-key: ${AI_OPENAI_API_KEY:}
      model: ${AI_OPENAI_MODEL:gpt-4o-mini}
      temperature: ${AI_OPENAI_TEMPERATURE:0.2}

logging:
  level:
    root: INFO
    com.azure.identity: INFO
    co.edu.uco.ucochallenge.infrastructure.secondary.secret: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
  observations:
    http:
      server:
        requests:
          enabled: true
  tracing:
    enabled: ${MANAGEMENT_TRACING_ENABLED:false}
    sampling:
      probability: 0.25
    exporter:
      otlp:
        enabled: ${OTLP_EXPORT_ENABLED:false}
        endpoint: ${OTLP_ENDPOINT:http://localhost:4318/v1/traces}
        compression: gzip
